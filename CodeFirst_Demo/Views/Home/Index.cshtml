@{
    ViewData["Title"] = "Home Page";
    ViewData["testA"] = "我是 Index.cshtml 裡面的 Razor 的 ViewData";

    Layout = "_Layout"; // 個頁面預設載入 shared/ 目錄下的 _shared.cshtml 當作 layout-template
    
}

@section myVueSection {
    @* @Url.Content: 將相對路徑轉為絕對路徑 *@
    <script src="@Url.Content("/js/vue3.js")" type="text/javascript"></script>
}

<div class="text-center">
    <h1 class="display-4">@ViewData["Title"]</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
    <p style="color: #1b6ec2">@ViewData["testA"]</p>
    <p>@ViewBag.testB</p>
    <p>@ViewData["testC"]</p>
</div>

<div id="app" style="border: 1px solid black; padding: 3px;">
    
    <p v-bind:style="[colorFlag ? myStyleObjRed : myStyleObjGreen]">Vue.js - {{ message }}</p>
    <br/>
    <button type="button" class="btn btn-outline-dark" @@click="greeting">Greeting Message</button>
    <br/>
    <button type="button" class="btn btn-outline-dark" @@click="chgColor">Change Msg Color ({{ colorFlag }})</button>
</div>

<script>
    const { createApp } = Vue
    createApp({
        data() {
            return {
                myStyleObjRed: {
                    color: 'red',
                    fontSize: '30px',
                },
                myStyleObjGreen: {
                    color: 'green',
                    fontSize: '30px',
                },
                colorFlag: true,
                message: 'Hello Vue!'
            }
        },
        methods: {
            greeting(event) {
                // `this` inside methods points to the current active instance
                alert(`Hello ${this.message}!`)
                // `event` is the native DOM event
                if (event) {
                    alert(event.target.tagName)
                }
            },
            chgColor(event) {
                event.stopPropagation();
                this.colorFlag = !this.colorFlag;
            }
        }
}).mount('#app')
</script>