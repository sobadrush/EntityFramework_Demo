@* @model System.Collections.Generic.List<CodeFirst_Demo.Models.UserModel> *@
@using Microsoft.EntityFrameworkCore.Internal
@model IEnumerable<CodeFirst_Demo.Models.UserModel>

@{
    ViewBag.Title = "我是 ViewBag.title: User";
    Layout = "_Layout";
}

@{
    Model.ToList().ForEach(Console.WriteLine);
}

<h2>@ViewBag.Title</h2>

@* GET 跳頁 *@
<button type="button" class="btn btn-outline-primary" style="margin: 1rem;" onclick="location.href='@Url.Action("AddUser","User")'">新增User(Get)</button>

@* POST 跳頁 *@
@* @using (Html.BeginForm("AddUser", "User", FormMethod.Post, new { id = "toAddUserBtn", @class = "" })) *@
@* { *@
@*     @Html.AntiForgeryToken() *@
@*     <a href="javascript:document.getElementById('toAddUserBtn').submit()" class="btn btn-outline-primary">新增User(Post)</a> *@
@* } *@

<div class="container">
    <div class="row">
        <div class="col-md form-group" style="width: 20rem; margin-bottom: 1rem; border: 1px dashed black; padding: 1rem;">
            <h5>條件查詢</h5>
            <form asp-action="GetUser" asp-controller="User" method="POST">
                <label for="queryUserId" class="form-label fw-bold">UserId</label>
                <input type="text" id="queryUserId" class="form-control" placeholder="輸入 userId 進行查詢" name="userModel.Id" value="@ViewData["UserId"]"/>
                <label for="queryUserName" class="form-label fw-bold">UserName</label>
                <input type="text" id="queryUserName" class="form-control" placeholder="輸入 userName 進行查詢" name="userModel.UserName" value="@ViewData["UserName"]"/>
                <input type="submit" class="btn btn-outline-dark" style="margin-top: 1rem;" value="查詢"/>
            </form>
        </div>
        <div class="col-md">
          Column
        </div>
        <div class="col-md">
          Column
        </div>
    </div>
</div>

<table class="table table-bordered table-striped table-hover">
    <thead>
        <tr style="background: lightblue; text-align: center;">
            <th scope="col">#</th>
            <th scope="col">@Html.DisplayNameFor(modelGG => modelGG.Id)</th>
            <th scope="col">@Html.DisplayNameFor(model => model.Name)</th>
            <th scope="col">@Html.DisplayNameFor(modelGG => modelGG.UserName)</th>
            <th scope="col">@Html.DisplayNameFor(modelGG => modelGG.Email)</th>
            <th scope="col">@Html.DisplayNameFor(modelGG => modelGG.Age)</th>
            <th scope="col" style="background: #fa992a;">動作</th>
        </tr>
    </thead>
    <tbody>
        @{int i = 0;}
        @foreach (var item in Model)
        {
            ViewData["idx"] = i;
            <partial name="ItemPartial" model="item" view-data="ViewData"/>
            i++;
        }
    </tbody>
</table>